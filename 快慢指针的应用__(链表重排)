/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head==NULL||head->next==NULL)return;
        ListNode* headl=head;
        ListNode* headr=head;
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast&&fast->next){
            fast=fast->next->next;
            slow=slow->next;
        }
        ListNode* pre=nullptr;
        ListNode* cur=slow;
        while(cur){
            ListNode* nxt=cur->next;
            cur->next=pre;
            pre=cur;
            cur=nxt;
        }
        headr=pre;
        while(headr->next){
            ListNode* nxt=headl->next;
            ListNode* nxt1=headr->next;
            headl->next=headr;
            headr->next=nxt;
            headl=nxt;
            headr=nxt1;
        }
    }
};
